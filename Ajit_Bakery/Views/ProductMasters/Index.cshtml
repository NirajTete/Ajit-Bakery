@model IEnumerable<Ajit_Bakery.Models.ProductMaster>

@{
    ViewData["Title"] = "Index";
}

<div class="card">
    <div class="card-header bg-dark text-white py-2">
        <div class="d-flex align-items-baseline">
            <a asp-action="Index" asp-controller="Home" class="btn btn-link text-white"><i class="fa fa-arrow-left"></i></a>
            <h4 class="mx-auto text-white text-2xl font-semibold"> Product Master</h4>
            <a asp-action="Create" class="btn btn-success btn-sm text-white x">
                <i class="fas fa-plus-square"></i> Add
            </a>
            <a onclick="WriteDataToTally1()" id="WriteDataToTallyId" class="btn btn-primary text-white btn-sm ">
                <i class="fas fa-sync-alt"></i> Write Product
            </a>
            <a onclick="WriteDataToTally(this)" id="WriteDataToTallyId" class="btn btn-primary text-white btn-sm mr-1">
                <i class="fas fa-sync-alt"></i> Write Category
            </a>
        </div>
    </div>
    <div class="card-body mt-4">
        <div class="table table-responsive">
            <table id="ProductMaster" class="table table-striped table-bordered" style="width:100%">
                <thead class="thead-light">
                    <tr class="text-center small">
                        <th class="text-center">Sr.No.</th>
                        <th class="text-center">Product Name</th>
                        <th class="text-center">Range</th>
                        <th class="text-center">Uom</th>
                        <th class="text-center">Category</th>
                        <th class="text-center">Type</th>
                        <th class="text-center">MRP</th>
                        <th class="text-center">Selling</th>
                                                <th class="text-center noExport">Action</th>
                    </tr>
                </thead>
                <tbody class="small text-center">
                    @{
                        int counter = 1;
                    }
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="text-center">@counter</td>
                            <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
                            <td class="text-center">@Html.DisplayFor(modelItem => item.Unitqty)</td>
                            <td>@Html.DisplayFor(modelItem => item.Uom)</td>
                            <td>@Html.DisplayFor(modelItem => item.Category)</td>
                            <td>@Html.DisplayFor(modelItem => item.Type)</td>
                            <td class="text-center">@Html.DisplayFor(modelItem => item.MRP)</td>
                            <td class="text-center">@Html.DisplayFor(modelItem => item.Selling)</td>

                            <td class="text-center">
                                <div class="btn-group btn-group-sm" role="group">
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-success" title="Edit">
                                        <i class="fas fa-pencil-alt"></i>
                                    </a>
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-warning" title="Details">
                                        <i class="fa fa-eye"></i>
                                    </a>
                                    <a href="javascript:void(0);" class="btn btn-danger delete-btn" data-id="@item.Id" title="Delete">
                                        <i class="fas fa-trash-alt"></i>
                                    </a>

                                </div>
                            </td>
                        </tr>
                        counter++;
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function WriteDataToTally1() {
            $("#loadingIndicator").show();

            $.ajax({
                url: "/ProductMasters/WriteDataToTally",
                // url: "/Product_Master/WriteDataToTally11",
                type: "POST",
                // data: { uom: shortcut }, // Pass the shortcut value
                success: function (response) {
                    $("#loadingIndicator").hide();
                    // // Handle success
                    // button.innerHTML = '<i class="fas fa-sync-alt"></i>';
                    // // button.innerHTML = '<i class="fas fa-sync-alt"></i> Tally Update';
                    // button.disabled = false;

                    if (response.success) {
                        Swal.fire("Success", response.message, "success");
                    } else {
                        Swal.fire("Error", response.message, "error");
                    }
                },

                error: function (xhr, status, error) {
                    $("#loadingIndicator").hide();
                    // // Handle error
                    // button.innerHTML = '<i class="fas fa-sync-alt"></i> Tally Update';
                    // button.disabled = false;
                    Swal.fire("Error", "An error occurred while updating Tally", "error");
                }
            });
        }
        function WriteDataToTally() {
            $("#loadingIndicator").show();
            const shortcut = "NA";
            // const shortcut = button.getAttribute("data-shortcut");
            console.log(shortcut);
            // button.disabled = true;
            // button.innerHTML = "Processing...";

            $.ajax({
                url: "/ProductMasters/WriteDataToTally_category",
                type: "POST",
                data: { uom: shortcut }, // Pass the shortcut value
                success: function (response) {
                    // // Handle success
                    // button.innerHTML = '<i class="fas fa-sync-alt"></i> Tally Update';
                    // button.disabled = false;
                    $("#loadingIndicator").hide();
                    if (response.success) {
                        Swal.fire("Success", response.message, "success");
                    } else {
                        Swal.fire("Error", response.message, "error");
                    }
                },
                error: function (xhr, status, error) {
                    // Handle error
                    // button.innerHTML = '<i class="fas fa-sync-alt"></i> Tally Update';
                    // button.disabled = false;
                    Swal.fire("Error", "An error occurred while updating Tally", "error");
                }
            });
        }

        function ReadDataToTally1() {
            $("#loadingIndicator").show();
            // Retrieve the 'shortcut' value from the data attribute


            $.ajax({
                url: "/ProductMasters/ReadDataToTally1",
                type: "POST",
                // data: { uom: shortcut }, // Pass the shortcut value
                success: function (response) {
                    $("#loadingIndicator").hide();

                    if (response.success) {
                        // Swal.fire("Success", response.message, "success");
                        Swal.fire({
                            title: "Success",
                            text: response.message,
                            icon: "success"
                        }).then(() => {
                            location.reload(); // Reloads the current view
                        });
                    } else {
                        Swal.fire("Error", response.message, "error");
                    }
                },
                error: function (xhr, status, error) {

                    Swal.fire("Error", "An error occurred while updating Tally", "error");
                }
            });
        }
    </script>
    <script>
        $(document).ready(function () {
            $('#ProductMaster').DataTable({
                dom: 'Bfrtip', // Add button controls
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Product Master',
                        filename: function () {
                            return generateFilename('ProductMaster');
                        },
                        text: '<i class="fas fa-file-excel"></i> Export Excel',
                        className: 'dt-button btn btn-success',
                        exportOptions: {
                            columns: ':not(.noExport)' // Exclude columns with class 'noExport'
                        },
                    },
                    {
                        extend: 'pdf',
                        title: 'Product Master',
                        filename: function () {
                            return generateFilename('Product Master');
                        },
                        text: '<i class="fas fa-file-pdf"></i> Export PDF',
                        className: 'dt-button btn btn-danger',
                        pageSize: 'A4',
                        exportOptions: {
                            columns: ':not(.noExport)' // Exclude columns with class 'noExport'
                        },
                        customize: function (doc) {
                            // Centering the title
                            doc.styles.title = {
                                fontSize: 16,
                                bold: true,
                                alignment: 'center'
                            };

                            // Adjusting table width
                            doc.content[1].table.widths = Array(doc.content[1].table.body[0].length + 1).join('*').split('');

                            // Define columns to exclude from centering (0-based index)
                            let excludeColumns = []; // Example: Excluding 2nd and 4th columns

                            // Center align table content, except for excluded columns
                            let tableBody = doc.content[1].table.body;
                            tableBody.forEach(function (row, rowIndex) {
                                row.forEach(function (cell, colIndex) {
                                    if (!excludeColumns.includes(colIndex)) {
                                        cell.alignment = 'center'; // Center align text in all cells except excluded columns
                                    }
                                });
                            });
                        }

                    },
                    // {
                    //     extend: 'csv',
                    //     filename: function () {
                    //         return generateFilename('DAK_Report');
                    //     },
                    //     text: '<i class="fas fa-file-csv"></i> Export CSV',
                    //     className: 'dt-button btn btn-info'
                    // },
                    // {
                    //     extend: 'print',
                    //     title: 'DAK Report',
                    //     text: '<i class="fas fa-print"></i> Print',
                    //     className: 'dt-button btn btn-primary'
                    // }
                ],
                info: false,  ordering: false,
            });
        });

        function generateFilename(baseName) {
            const now = new Date();
            const date = now.toISOString().slice(0, 10).replace(/-/g, '_'); // Format: YYYY_MM_DD
            return `${baseName}_${date}`;
        }
    </script>

    <script>
        document.querySelectorAll(".delete-btn").forEach(button => {
            button.addEventListener("click", function () {
                let productId = this.getAttribute("data-id");
                    Swal.fire({
                        title: "Are you sure?",
                        text: "You won't be able to revert this!",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#d33",
                        cancelButtonColor: "#3085d6",
                        confirmButtonText: "Yes, delete it!"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: "@Url.Action("Delete", "ProductMasters")", // Replace with your controller name
                                data: { id: productId },
                                type: "GET",
                                success: function (response) {
                                    Swal.fire({
                                        title: "Deleted!",
                                        text: response.message,
                                        icon: "success",
                                        timer: 1500,
                                        showConfirmButton: false
                                    });

                                    // Remove the deleted row from the table
                                    $("a[data-id='" + productId + "']").closest("tr").remove();
                                },
                                error: function () {
                                    Swal.fire({
                                        title: "Error!",
                                        text: "Something went wrong. Try again!",
                                        icon: "error"
                                    });
                                }
                            });
                        }
                    });
                // Swal.fire({
                //     title: "Are you sure?",
                //     text: "You won't be able to revert this!",
                //     icon: "warning",
                //     showCancelButton: true,
                //     confirmButtonColor: "#d33",
                //     cancelButtonColor: "#3085d6",
                //     confirmButtonText: "Yes, delete it!"
                // }).then((result) => {
                //     if (result.isConfirmed) {
                //         window.location.href = "/ProductMaster/Delete/" + productId;
                //     }
                // });
            });
        });
    </script>
}