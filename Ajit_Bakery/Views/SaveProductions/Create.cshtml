@model Ajit_Bakery.Models.SaveProduction

@{
    ViewData["Title"] = "Create";
}

<div class="card">
    <div class="card-header bg-dark text-white py-2">
        <div class="d-flex align-items-baseline">
            <a asp-action="Index" asp-controller="SaveProductions" class="btn btn-link text-white"><i class="fa fa-arrow-left"></i></a>
            <h4 class="mx-auto text-white text-2xl font-semibold"> Save Production </h4>
            <a asp-action="Create" class="btn btn-success btn-sm text-white">
                <i class="fas fa-plus-square"></i> Save Production
            </a>
        </div>
    </div>
    <div class="card-body mt-4">
        <div class="row">
            <form asp-action="Create" id="SaveProduction" onsubmit="return validateForm()">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="row">
                    <div class="form-group col-sm-4">
                        <label asp-for="Production_Id" class="control-label fw-bold small"></label>
                        <select asp-for="Production_Id" id="Production_Id" required class="form-control text-uppercase" asp-items="@ViewBag.GetProduction_Id" onchange="OnProduction_IdChange()">
                        </select>
                    </div>
                </div>
                <div class="row p-3" style="display:none" id="TableDataId">
                    <table id="tableData" class="table table-bordered mt-3">
                        <thead class="thead-dark">
                            <tr>
                                <th>Outlet Name</th>
                                <th>Product Name</th>
                                <th>Range</th>
                                <th>Total Qty</th>
                                <th>Pending Qty</th>
                                <th>MRP</th>
                                @* <th>MRP (Rs/Gm)</th> *@
                                <th>Selling</th>
                                @* <th>Selling (Rs/Gm)</th> *@
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <div class="row">
                    <div class="form-group col-sm-4">
                        <label asp-for="ProductName" class="control-label fw-bold small fw-bold small"></label>
                        <select asp-for="ProductName" class="form-control text-uppercase"  id="ProductName" required>
                        </select>
                    </div>
                    <div class="form-group col-sm-2">
                        <label asp-for="DialCode" class="control-label fw-bold small"></label>
                        <select asp-for="DialCode" class="form-control text-uppercase" id="DialCode" onchange="GetDialCodes()" required></select>
                    </div>
                </div>
                <div class="row" @* style="display:none" *@ id="PartDial">
                    
                    <div class="form-group col-sm-2" style="display:none">
                        <label asp-for="DialShape" class="control-label fw-bold small">Dial Shape</label>
                        <select asp-for="DialShape" class="form-control text-uppercase" id="DialShape" required>
                            @* onchange="GetDialShape()" *@
                            <option value="">Dial-Shape</option>
                            <option value="Circle">Circle</option>
                            <option value="Square">Square</option>
                        </select>
                    </div>
                    <div class="form-group col-sm-3">
                        <label asp-for="DialTierWg" class="control-label fw-bold small">Tier Wt.</label>
                        <input asp-for="DialTierWg" onchange="OnDialWgChange()" id="DialTierWg" required class="form-control" />
                    </div>
                    <div class="form-group col-sm-3">
                        <label asp-for="DialTierWg_Uom" class="control-label fw-bold small"></label>
                        <input asp-for="DialTierWg_Uom" id="DialTierWg_Uom" required readonly class="form-control" />
                        <span asp-validation-for="DialTierWg_Uom" class="text-danger"></span>
                    </div>
                    <div class="form-group col-sm-2" @* style="display:none" *@>
                        <label asp-for="DialTierWgValue" class="control-label fw-bold small"></label>
                        <input asp-for="DialTierWgValue" id="DialTierWgValue" required readonly class="form-control" style="height:5vh; font-size: 16px; color:blueviolet; font-weight: 650;" />
                    </div>
                </div>
                @* <div class="row">
                    <button class="btn btn-info btn-sm col-sm-2" onclick="displayNetwt()">Get Net</button>
                </div> style="display:none" id="Netwt"*@
                <div class="row" @* style="display:none" *@ id="Partproduct">
                    <div class="form-group col-sm-1" style="display:none">
                        <label  class="control-label fw-bold small">Qty</label>
                        <input class="form-control" id="count" value="1"  style="height:5vh; font-size: 20px; color: green; font-weight: 650;" required readonly />
                    </div>
                    <div class="form-group col-sm-3">
                        <label asp-for="ProductGrossWg" class="control-label fw-bold small"></label>
                        <input asp-for="ProductGrossWg" id="ProductGrossWg" class="form-control" required onchange="Refresh()" />
                    </div>
                    <div class="form-group col-sm-3">
                        <label asp-for="ProductGrossWg_Uom" class="control-label fw-bold small"></label>
                        <select asp-for="ProductGrossWg_Uom" id="ProductGrossWg_Uom" required class="form-control text-uppercase" onchange="OnUomChange()">
                            @* <option>KGS</option> *@
                            <option>GMS</option>
                        </select>
                    </div>
                    <div class="form-group col-sm-2"@*  style="display:none" *@>
                        <label asp-for="ProductGrossWgValue" class="control-label fw-bold small"></label>
                        <input asp-for="ProductGrossWgValue" required id="ProductGrossWgValue" style="height:5vh; font-size: 16px; color:brown; font-weight: 650;" readonly class="form-control" />
                    </div>
                </div>
                <div class="row" style="display:none"  id="Partnetwt">
                    <div class="form-group col-sm-2">
                        <label asp-for="NetWg" class="control-label fw-bold small"></label>
                        <input asp-for="NetWg" style="height:5vh; font-size: 16px; color: green; font-weight: 650;" readonly id="NetWg" 
                        required class="form-control" />
                    </div>
                    <div class="form-group col-sm-2">
                        <label asp-for="NetWg_uom" class="control-label fw-bold small">Uom</label>
                        <input asp-for="NetWg_uom" style="height:5vh; font-size: 16px; color: green; font-weight: 650;"
                               required readonly id="NetWg_uom" class="form-control" />
                    </div>
                </div>
                <div class="row" @* style="display:none" *@ id="Partnetwt">
                    <div class="form-group col-sm-2">
                        <label asp-for="mrpRs" class="control-label fw-bold small">Mrp Rs</label>
                        <input asp-for="mrpRs" style="height:5vh; font-size: 16px; color: green; font-weight: 650;" readonly id="mrpRs"
                               required class="form-control" />
                    </div>
                    <div class="form-group col-sm-2">
                        <label asp-for="sellingRs" class="control-label fw-bold small">Selling Rs</label>
                        <input asp-for="sellingRs" style="height:5vh; font-size: 16px; color: green; font-weight: 650;"
                               required readonly id="sellingRs" class="form-control" />
                    </div>
                </div>
                <div class="row" @* style="display:none" *@ id="Parttotal">
                    <div class="form-group col-sm-2">
                        <label asp-for="TotalNetWg" class="control-label fw-bold small"></label>
                        <input asp-for="TotalNetWg" style="height:5vh; font-size: 16px; color: green; font-weight: 650;" readonly id="TotalNetWg" required class="form-control" />
                    </div>
                    <div class="form-group col-sm-2">
                        <label asp-for="TotalNetWg_Uom" class="control-label fw-bold small">Uom</label>
                        <input asp-for="TotalNetWg_Uom" style="height:5vh; font-size: 16px; color: green; font-weight: 650;" 
                        required readonly id="TotalNetWg_Uom" class="form-control" />
                    </div>
                </div>
                <div class="row mb-3 p-2">
                    <div class="form-group col-sm-12 ">
                        <input type="submit" value="Save" class="btn btn-primary btn-sm col-md-12" />
                    </div>
                </div>
               
            </form>
        </div>

    </div>
</div>
<div id="spinner" style="display: none;">
    <div class="spinner-border text-primary" role="status">
        <span class="sr-only">Loading...</span>
    </div>
    <p class="mt-2" style="font-weight:600">Please wait...</p>
</div>
<style>
    #spinner {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1000; /* Ensure it's above other content */
        background-color: rgba(255, 255, 255, 0.8);
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        text-align: center;
    }
</style>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function calculateNetWeight() {
            let grossWeight = parseFloat(document.getElementById("ProductGrossWg").value) || 0;
            let tierWeight = parseFloat(document.getElementById("DialTierWg").value) || 0;
            let netWeight = grossWeight - tierWeight;

            // Ensure net weight is always positive
            if (netWeight < 0) {
                netWeight = 0;
            }

            document.getElementById("NetWg").value = netWeight.toFixed(2); // Display with two decimal places
            document.getElementById("TotalNetWg").value = netWeight.toFixed(2); // Display with two decimal places
            $("#NetWg_uom").val("GMS"); // Set UOM to "GMS"
            $("#TotalNetWg_Uom").val("GMS"); // Set UOM to "GMS"

            // var Production_Id = $("#Production_Id").val();
            // var productName = $("#ProductName").val();
            // var NetWg = $("#DialTierWg").val();
            // var TotalNetWg = $("#TotalNetWg").val();
            sendNetWeightToServer(netWeight);

        }

        // Attach event listeners to update Net Weight dynamically
        document.getElementById("ProductGrossWg").addEventListener("change", calculateNetWeight);
        document.getElementById("DialTierWg").addEventListener("change", calculateNetWeight);

        // Function to send data via AJAX
        function sendNetWeightToServer(netWeight) {
            var Production_Id = $("#Production_Id").val();
            var productName = $("#ProductName").val();
            var TotalNetWg = $("#TotalNetWg").val();

            $.ajax({
                url: "/SaveProductions/CalculateTotalNetWeight", // Change to your actual controller and method
                type: "POST",
                data: {
                    Production_Id: Production_Id,
                    productName: productName,
                    TotalNetWg: parseFloat(TotalNetWg)
                },
                success: function (response) {
                    console.log("Server Response:", response);
                    // $("#TotalNetWg").val(response.totalNetWg); // Assuming the response contains updated TotalNetWg
                    $("#mrpRs").val(response.mrpRs.toFixed(2)); // Assuming the response contains updated TotalNetWg
                    $("#sellingRs").val(response.sellingRs.toFixed(2)); // Assuming the response contains updated TotalNetWg
                },
                error: function (xhr, status, error) {
                    console.error("AJAX Error:", error);
                }
            });
        }


        // function displayNetwt(){
        //     event.preventDefault();
        //     $("#Netwt").show();
        // }
        $("#ProductName").change(function () {
            var productName = $(this).val(); // Get selected product name
            var Production_Id = $("#Production_Id").val(); // Get selected product name

            if (productName) {
                $.ajax({
                    url: "/SaveProductions/GetProductDetails",  // Update with your actual API/Action URL
                    type: "GET",
                    data: { productName: productName, Production_Id: Production_Id },
                    dataType: "json",
                    success: function (response) {
                        console.log("Response:", response);

                        if (response.success) {

                            $("#count").val("");
                            $("#ProductGrossWg").val("");
                            $("#ProductGrossWg_Uom").val("");
                            $("#ProductGrossWgValue").val("");
                            $("#DialShape").val("");
                            $("#DialCode").val("");
                            $("#DialTierWg").val("");
                            $("#DialTierWg_Uom").val("");
                            $("#DialTierWgValue").val("");
                            $("#TotalNetWg").val("");
                            $("#TotalNetWg_Uom").val("");

                            // Example: Update fields based on response
                            if(response.data == 0){
                                Swal.fire({
                                    icon: "warning",
                                    title: "Production Already Completed",
                                    text: "This product's production has already been done!",
                                    confirmButtonColor: "#3085d6",
                                    confirmButtonText: "OK"
                                });
                                $("#count").val("");
                                $("#ProductName").val("");
                            }
                            else{
                                // $("#count").val(response.data);
                                $("#count").val(1);
                                // 🔹 Populate the DialCode Dropdown
                                var dialDropdown = $("#DialCode");
                                dialDropdown.empty(); // Clear previous options
                                dialDropdown.append('<option value="">Select Dial</option>'); // Default option

                                // Append new options using correct case
                                $.each(response.dialCodes, function (index, value) {
                                    dialDropdown.append('<option value="' + value + '">' + value + '</option>');
                                });

                            }
                        } else {
                            alert("Product details not found.");
                        }
                    },
                    error: function () {
                        alert("Error fetching product details.");
                    }
                });
            }
        });
        function OnProduction_IdChange() {
            var Production_Id = $("#Production_Id").val();
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetOutlets", "SaveProductions")", // Replace with your controller
                data: { Production_Id: Production_Id },
                success: function (response) {
                    if (response.success) {
                        console.log("response : " + JSON.stringify(response));
                        console.log("response.data : " + JSON.stringify(response.data));
                        console.log("response.TableData : " + JSON.stringify(response.TableData));
                        var $dropdown = $("#ProductName");  // Get the select element
                        $dropdown.empty();  // Clear previous options

                        // Iterate over response data and append options
                        $.each(response.data, function (index, item) {
                            var option = $("<option>")
                                .val(item.value)  // Set option value
                                .text(item.text)  // Set option text
                                .prop("disabled", item.disabled)  // Set disabled property
                                .prop("selected", item.selected); // Set selected property

                            $dropdown.append(option);
                        });


                        //bind table data
                        // **Bind Table Data**
                        $("#TableDataId").show();
                        var $tableBody = $("#tableData tbody");
                        $tableBody.empty(); // Clear previous table data

                        $.each(response.tableData, function (index, item) {
                            var row = `<tr>
                            <td>${item.outletName}</td>
                            <td>${item.productName}</td>
                            <td>${item.basicUnit}</td>
                            <td>${item.totalQty}</td>
                            <td>${item.pendingQty}</td>
                            <td>${item.mrp.toFixed(2)}</td>
                            <td>${item.selling.toFixed(2)}</td>
                        </tr>`;
                            $tableBody.append(row);
                        });
                        //ended
                        // <td>${item.selling_Rs.toFixed(2)}</td>
                        // <td>${item.mrP_Rs.toFixed(2)}</td>
                        //bind into Outlet_Name id
                    } else {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning!',
                            text: response.message
                        });
                        return;
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'Something went wrong! Please try again.'
                    });
                }
            });

        }
        function validateForm() {
            let isValid = true;
            let fields = document.querySelectorAll(".required-field");

            for (let field of fields) {
                if (field.value.trim() === "") {
                    alert("Please fill out all required fields.");
                    field.focus(); // Focus on the first empty field
                    return false; // Prevent form submission
                }
            }
            return true; // Allow form submission if all fields are filled
        }
        $(document).ready(function () {
            $("#SaveProduction").submit(function (event) {
                event.preventDefault(); // Prevent default form submission

                //check furst
                let countValue = parseInt($("#count").val()) || 0;
                if (countValue === 0) {
                    Swal.fire({
                        icon: "error",
                        title: "You Can't Proceed!",
                        text: "You have already completed all production for this Product ID.",
                        confirmButtonText: "OK"
                    }).then(() => {
                        window.location.href = "@Url.Action("Index", "SaveProductions")"; // Redirect to Index
                        return;
                    });
                }
                //end

                Swal.fire({
                    title: "Generate Sticker?",
                    text: "Do you want to generate a sticker for this production?",
                    icon: "question",
                    showCancelButton: true,
                    confirmButtonText: "Yes",
                    cancelButtonText: "No"
                }).then((result) => {
                    let generateStickerValue = result.isConfirmed ? 1 : 0;
                    // Append the value to form data
                    let formData = $(this).serialize() + "&generatesticker=" + generateStickerValue;
                    console.log("formData : " + formData);
                    $('#spinner').show();
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Create", "SaveProductions")", // Replace with your controller
                        data: formData,
                        success: function (response) {
                            $('#spinner').hide();
                            if (response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success!',
                                    text: response.message,
                                    confirmButtonText: "OK"
                                }).then(() => {
                                    window.location.href = "@Url.Action("Index", "SaveProductions")"; // Redirect to Index
                                });
                                $("#SaveProduction")[0].reset(); // Reset form after success
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error!',
                                    text: response.message
                                });
                                return;
                            }
                        },
                        error: function () {
                            $('#spinner').hide();
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: 'Something went wrong! Please try again.'
                            });
                        }
                    });
                });
            });
        });
        function calculateTotalNetWeight() {
            // Get values in grams
            let productGrossWg = parseFloat(document.getElementById("ProductGrossWgValue").value) || 0;
            let dialTierWg = parseFloat(document.getElementById("DialTierWgValue").value) || 0;

            // Convert to kilograms
            let totalNetWeight = (productGrossWg + dialTierWg) / 1000;

            // Set the result in TotalNetWg
            document.getElementById("TotalNetWg").value = totalNetWeight.toFixed(3) ; // 3 decimal places
            document.getElementById("TotalNetWg_Uom").value = "KGS"; // 3 decimal places
        }
        function OnDialWgChange(){
            var DialTierWg = $("#DialTierWg").val();
            var DialTierWg_Uom = $("#DialTierWg_Uom").val();
            console.log(DialTierWg_Uom);
            $("#DialTierWgValue").val(DialTierWg + " " + DialTierWg_Uom);
        }
        function Refresh(){
            OnUomChange();
            calculateTotalNetWeight();
            var uom = $("#ProductGrossWg_Uom").val();
            var weight = parseFloat($("#ProductGrossWg").val()) || 0;
            // $.ajax({
            //     url: "/SaveProductions/GetProductData",  // Update with your actual API/Action URL
            //     type: "GET",
            //     data: { productName: productName, Production_Id: Production_Id ,uom:uom,weight:weight},
            //     dataType: "json",
            //     success: function (response) {
            //         if (response.success) {
            //             // Handle success case
            //         } else {
            //             Swal.fire({
            //                 icon: 'warning',
            //                 title: 'Warning!',
            //                 text: response.message || "Something went wrong!" // Default message if response.message is empty
            //             });

            //             // Clear the input fields
            //             $("#ProductGrossWg_Uom").val("");
            //             $("#ProductGrossWg").val("");
            //             $("#ProductGrossWgValue").val("");
            //         }
            //     },
            //     error: function () {
            //         alert("Error fetching product details.");
            //     }
            // });
        }
        function OnUomChange() {
            var uom = $("#ProductGrossWg_Uom").val(); // Get selected UOM (KGS/GMS)
            var weight = parseFloat($("#ProductGrossWg").val()) || 0; // Get entered weight, default to 0

            var convertedWeight = 0;

            if (uom === "KGS") {
                convertedWeight = weight * 1000; // Convert KGS to GMS
            } else {
                convertedWeight = weight; // Already in GMS
                $("#ProductGrossWg_Uom").val("GMS");
            }
            
            $("#ProductGrossWgValue").val(convertedWeight + " GMS"); // Set converted value
        }
        function GetDialShape() {
            // alert("call");
            var dialShape = $("#DialShape").val(); // Get selected DialShape value

            $.ajax({
                url: '/SaveProductions/GetDialShape',  // Update this with your actual controller
                type: 'GET',
                data: { shape: dialShape },
                success: function (response) {
                    console.log("data : " + JSON.stringify(response.data));
                    // Bind data to DialCode dropdown
                    var dialCodeDropdown = $("#DialCode");
                    dialCodeDropdown.empty(); // Clear previous options
                    dialCodeDropdown.append('<option value="">Select Dial</option>'); // Default option

                    $.each(response.data, function (index, item) {
                        dialCodeDropdown.append('<option value="' + item.dialCode + '">' + item.dialCode + '</option>');
                    });

                    // // If DialTierWg is returned, update the input field
                    // if (response.dialTierWg) {
                    //     $("#DialTierWg").val(response.dialTierWg);
                    // } else {
                    //     $("#DialTierWg").val(''); // Clear if no data
                    // }
                },
                error: function () {
                    alert("Error fetching data. Please try again.");
                }
            });
            //OnDialWgChange();
        }
        function GetDialCodes() {
            //alert("call");

            var DialCode = $("#DialCode").val(); // Get selected DialCode value

            $.ajax({
                url: '/SaveProductions/GetDialCodes',  // Ensure correct controller name
                type: 'GET',
                data: { DialCode: DialCode }, // Pass correct parameter
                dataType: 'json', // Ensure response is JSON
                success: function (response) {
                    console.log("Response Data:", response);

                    if (response.success && response.data) {
                        $("#DialTierWg").val(response.data.dialWg); // Set value
                        $("#DialTierWg_Uom").val(response.data.dialWgUom); // Set value
                        $("#DialShape").val(response.data.dialShape);
                    } else {
                        $("#DialTierWg").val(''); // Clear field if no data found
                        alert("No data found for this Dial Code.");
                    }
                    OnDialWgChange();
                    calculateTotalNetWeight();
                },
                error: function (xhr, status, error) {
                    console.error("AJAX Error:", status, error);
                    alert("Error fetching data. Please try again.");
                }
            });
        }
    </script>
}

