@model IEnumerable<Ajit_Bakery.Models.BoxMaster>

@{
    ViewData["Title"] = "Index";
}

<div class="card">
    <div class="card-header bg-dark text-white py-2">
        <div class="d-flex align-items-baseline">
            <a asp-action="Index" asp-controller="Home" class="btn btn-link text-white"><i class="fa fa-arrow-left"></i></a>
            <h4 class="mx-auto text-white text-2xl font-semibold"> Box Master</h4>
            <a asp-action="Create" class="btn btn-success btn-sm text-white">
                <i class="fas fa-plus-square"></i> Add
            </a>
        </div>
    </div>
    <div class="card-body mt-4">
        <div class="table table-responsive">
            <table id="BoxMaster" class="table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.BoxNumber)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BoxLength)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BoxBreadth)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BoxHeight)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BoxUom)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BoxArea)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CreateDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Createtime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ModifiedDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Modifiedtime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.User)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.BoxNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.BoxLength)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.BoxBreadth)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.BoxHeight)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.BoxUom)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.BoxArea)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreateDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Createtime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ModifiedDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Modifiedtime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.User)
                            </td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>

        document.querySelectorAll(".delete-btn").forEach(button => {
            button.addEventListener("click", function () {
                let productId = this.getAttribute("data-id");
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#d33",
                    cancelButtonColor: "#3085d6",
                    confirmButtonText: "Yes, delete it!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "@Url.Action("Delete", "BoxMasters")", // Replace with your controller name
                            data: { id: productId },
                            type: "GET",
                            success: function (response) {
                                Swal.fire({
                                    title: "Deleted!",
                                    text: response.message,
                                    icon: "success",
                                    timer: 1500,
                                    showConfirmButton: false
                                });

                                // Remove the deleted row from the table
                                $("a[data-id='" + productId + "']").closest("tr").remove();
                            },
                            error: function () {
                                Swal.fire({
                                    title: "Error!",
                                    text: "Something went wrong. Try again!",
                                    icon: "error"
                                });
                            }
                        });
                    }
                ],
                info: false,  ordering: false,
            });
        });


    </script>
}