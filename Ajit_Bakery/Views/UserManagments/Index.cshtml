@model List<string>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- [ breadcrumb ] start -->
<div class="card">
    <div class="card-header bg-dark text-white py-2">
        <div class="d-flex align-items-baseline">
            <a asp-action="Index" asp-controller="Home" class="btn btn-link text-white"><i class="fa fa-arrow-left"></i></a>
            <h4 class="mx-auto text-white text-2xl font-semibold"> Registered Users List</h4>
            <a asp-action="CreateUser" class="btn btn-success btn-sm text-white">
                <i class="fas fa-plus-square"></i> Add
            </a>
        </div>
    </div>
    <div class="card-body mt-4">
        <div class="table table-responsive">
            <table id="UserReg" class="table table-striped table-bordered" style="width:100%">
                <thead class="thead-light">
                    <tr class="text-center">
                        <th style="text-align: center;">Sr. No</th>
                        <th style="text-align: center;">UserName</th>
                        <th style="text-align: center;">Action</th>
                    </tr>
                </thead>
                <tbody class="  text-center">
                    @{
                        int counter = 1;
                    }
                    @foreach (var item in ViewBag.MyList)
                    {
                        <tr>
                            <td style="width:100px;">@counter</td>
                            <td class="text-lowercase">@item.UserName</td>
                            <td>
                                @if (item.IsFound)
                                {
                                    <a asp-action="Edit" asp-route-username="@item.UserName" class="btn btn-sm btn-warning">
                                        <i class="fa fa-pencil" aria-hidden="true"></i> Edit
                                    </a>

                                    <a href="#" class="btn btn-sm btn-danger delete-button" data-username="@item.UserName">
                                        <i class="fas fa-trash-alt" aria-hidden="true"></i> Delete
                                    </a>
                                }
                                else
                                {
                                    <a asp-action="Create" asp-route-username="@item.UserName" class="btn btn-sm btn-success">
                                        <i class="fa fa-plus" aria-hidden="true"></i> Allot
                                    </a>

                                    <a href="#" class="btn btn-sm btn-danger delete-button" data-username="@item.UserName">
                                        <i class="fas fa-trash-alt" aria-hidden="true"></i> Delete
                                    </a>
                                }


                            </td>

                        </tr>
                        counter++;
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            $('#UserReg').DataTable({
                dom: 'Bfrtip', // Add button controls
                buttons: [
                    {
                        extend: 'excel',
                        title: 'DAK Report',
                        filename: function () {
                            return generateFilename('DAK_Report');
                        },
                        text: '<i class="fas fa-file-excel"></i> Export Excel',
                        className: 'dt-button btn btn-success'
                    },
                    {
                        extend: 'pdf',
                        title: 'DAK Report',
                        filename: function () {
                            return generateFilename('DAK_Report');
                        },
                        text: '<i class="fas fa-file-pdf"></i> Export PDF',
                        className: 'dt-button btn btn-danger',
                        // orientation: 'landscape',
                        pageSize: 'A4',
                        customize: function (doc) {
                            doc.styles.title = {
                                fontSize: 16,
                                bold: true,
                                alignment: 'center'
                            };
                        }
                    },
                    {
                        extend: 'csv',
                        filename: function () {
                            return generateFilename('DAK_Report');
                        },
                        text: '<i class="fas fa-file-csv"></i> Export CSV',
                        className: 'dt-button btn btn-info'
                    },
                    {
                        extend: 'print',
                        title: 'DAK Report',
                        text: '<i class="fas fa-print"></i> Print',
                        className: 'dt-button btn btn-primary'
                    }
                ],
                info: false,  ordering: false,
            });
        });

        function generateFilename(baseName) {
            const now = new Date();
            const date = now.toISOString().slice(0, 10).replace(/-/g, '_'); // Format: YYYY_MM_DD
            return `${baseName}_${date}`;
        }
    </script>


    <script>
        function confirmDelete(username, row) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'You will not be able to recover this user!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    console.log("username : " + username);
                    $.ajax({
                        url: '/UserManagment/Delete', // The URL to the delete action
                        type: 'POST', // HTTP method
                        data: { username: username }, // Data to be sent to the server
                        success: function (response) {
                            if (response.success) {
                                console.log("Success !");
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: "User Removed Successfully !",
                                }).then(() => {
                                    // Remove the row from the table
                                    row.remove();
                                    window.location.href = '/UserManagment/Index';
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: "Error found !",
                                });
                            }
                        },
                        error: function () {
                            console.log('An error occurred while processing the request.');
                        }
                    });
                }
            });
        }

        var deleteButtons = document.querySelectorAll('.delete-button');
        deleteButtons.forEach(function (button) {
            button.addEventListener('click', function (event) {
                var username = button.dataset.username;
                var row = button.closest('tr'); // Find the closest table row
                confirmDelete(username, row);
            });
        });
    </script>
}