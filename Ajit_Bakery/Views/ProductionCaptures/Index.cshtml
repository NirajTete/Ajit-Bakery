@model IEnumerable<Ajit_Bakery.Models.ProductionCapture>

@{
    ViewData["Title"] = "Index";
}

<div class="card">
    <div class="card-header bg-dark text-white py-2">
        <div class="d-flex align-items-baseline">
            <a asp-action="Index" asp-controller="Home" class="btn btn-link text-white"><i class="fa fa-arrow-left"></i></a>
            <h4 class="mx-auto text-white text-2xl font-semibold"> Production Plan </h4>
            <a asp-action="Create" class="btn btn-success btn-sm text-white">
                <i class="fas fa-plus-square"></i> Add
            </a>
        </div>
    </div>
    <div class="card-body mt-4">
        <div class="table table-responsive">
            <table id="ProductionCapture" class="table table-striped table-bordered" style="width:100%">
                <thead class="thead-light">
                    <tr class="text-center small">
                        <th class="text-center">Sr.No.</th>
                        <th class="text-center">Production Odr.Id.</th>
                        <th class="text-center">Outlet Name</th>
                        <th class="text-center">Product Name</th>
                        <th class="text-center">Total Production Qty</th>
                        <th class="text-center">Date</th>
                        <th class="text-center">Status</th>
                        @* <th class="text-center" style="display:none">Action</th> *@
                    </tr>
                </thead>
                <tbody class="small text-center">
                    @{
                        int counter = 1;
                    }
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="text-center">@counter</td>
                            <td style="font-weight:600;color:rebeccapurple">@Html.DisplayFor(modelItem => item.Production_Id)</td>
                            <td>@Html.DisplayFor(modelItem => item.OutletName)</td>
                            <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
                            <td style="text-align:center">@Html.DisplayFor(modelItem => item.TotalQty)</td>
                            <td>@Html.DisplayFor(modelItem => item.Production_Date)</td>
                            <td>
                                @if (item.Status == "Pending")
                                {
                                    <span class="badge bg-warning fs-15 text-dark">Pending</span>
                                }
                                else
                                {
                                    <span class="badge bg-success fs-15 text-dark">@(item.Status)</span>
                                }
                            </td>
                            
                        </tr>
                        counter++;
                    }
                </tbody>
            </table>

        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $('#ProductionCapture').DataTable({
                dom: 'Bfrtip', // Add button controls
                buttons: [
                    {
                        extend: 'excel',
                        title: 'DAK Report',
                        filename: function () {
                            return generateFilename('DAK_Report');
                        },
                        text: '<i class="fas fa-file-excel"></i> Export Excel',
                        className: 'dt-button btn btn-success'
                    },
                    {
                        extend: 'pdf',
                        title: 'DAK Report',
                        filename: function () {
                            return generateFilename('DAK_Report');
                        },
                        text: '<i class="fas fa-file-pdf"></i> Export PDF',
                        className: 'dt-button btn btn-danger',
                        // orientation: 'landscape',
                        pageSize: 'A4',
                        customize: function (doc) {
                            doc.styles.title = {
                                fontSize: 16,
                                bold: true,
                                alignment: 'center'
                            };
                        }
                    },
                    {
                        extend: 'csv',
                        filename: function () {
                            return generateFilename('DAK_Report');
                        },
                        text: '<i class="fas fa-file-csv"></i> Export CSV',
                        className: 'dt-button btn btn-info'
                    },
                    {
                        extend: 'print',
                        title: 'DAK Report',
                        text: '<i class="fas fa-print"></i> Print',
                        className: 'dt-button btn btn-primary'
                    }
                ],
                info: false, ordering: false,
            });
        });

        function generateFilename(baseName) {
            const now = new Date();
            const date = now.toISOString().slice(0, 10).replace(/-/g, '_'); // Format: YYYY_MM_DD
            return `${baseName}_${date}`;
        }
    </script>
    <script>

        document.querySelectorAll(".delete-btn").forEach(button => {
            button.addEventListener("click", function () {
                let productId = this.getAttribute("data-id");
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#d33",
                    cancelButtonColor: "#3085d6",
                    confirmButtonText: "Yes, delete it!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "@Url.Action("Delete", "ProductionCaptures")", // Replace with your controller name
                            data: { id: productId },
                            type: "GET",
                            success: function (response) {
                                Swal.fire({
                                    title: "Deleted!",
                                    text: response.message,
                                    icon: "success",
                                    timer: 1500,
                                    showConfirmButton: false
                                });

                                // Remove the deleted row from the table
                                $("a[data-id='" + productId + "']").closest("tr").remove();
                            },
                            error: function () {
                                Swal.fire({
                                    title: "Error!",
                                    text: "Something went wrong. Try again!",
                                    icon: "error"
                                });
                            }
                        });
                    }
                ],
                info: false,  ordering: false,
            });
        });


    </script>
}


